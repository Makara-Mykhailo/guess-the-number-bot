import telebot
from telebot import types
import random
TOKEN = "8052013665:AAFoRy6Bq0gIXpNKySYgGrdksiIfdOw5G8Q"
bot = telebot.TeleBot(TOKEN)
user_state = {}
@bot.message_handler(commands=['start'])
def play_start(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("–î–∞", callback_data="about")
    markup.add(btn1)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–∏–≥—Ä–∞ '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ'.\n–•–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å?", reply_markup=markup)
    user_state[message.from_user.id] = {"state": "notPlaying"}

@bot.message_handler(commands=['stop'])
def stop_start(message):
    chat_id = message.chat.id
    bot.send_message(chat_id,f'–ò–≥—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')
    user_state[chat_id] = {"state": "notPlaying"}
@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    chat_id = call.message.chat.id
    if chat_id not in user_state:
            user_state[chat_id] = {"state": "notPlaying"} 
    state_info = user_state[chat_id]
    state = state_info["state"]
    if call.data == "about" and state == "notPlaying":
        #–ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–µ–∂–∏–º–∞ –≥—Ä–∏
        markup = types.InlineKeyboardMarkup()
        markup.add(
            types.InlineKeyboardButton("üòÅ–õ–µ–≥–∫–∏–π", callback_data="–õ–µ–≥–∫–∏–π"),
            types.InlineKeyboardButton("üôÇ–ù–æ—Ä–º–∞–ª—å–Ω—ã–π", callback_data="–ù–æ—Ä–º–∞–ª—å–Ω—ã–π")
        )
        markup.add(
            types.InlineKeyboardButton("üò°–¢—è–∂–µ–ª—ã–π", callback_data="–¢—è–∂–µ–ª—ã–π"),
            types.InlineKeyboardButton("üëø–ù–µ–≤–æ–∂–º–æ–∂–Ω–æ", callback_data="–ù–µ–≤–æ–∂–º–æ–∂–Ω–æ")
        )
        bot.send_message(call.message.chat.id, "–í–∏–±–µ—Ä–∏ —Ä–µ–∂–∏–º", reply_markup=markup)
    elif call.data in ["–õ–µ–≥–∫–∏–π", "–ù–æ—Ä–º–∞–ª—å–Ω—ã–π", "–¢—è–∂–µ–ª—ã–π", "–ù–µ–≤–æ–∂–º–æ–∂–Ω–æ"] and state == "notPlaying":
        user_state[chat_id]['state'] = 'Playing'
        user_state[chat_id]['mod'] = call.data
        playing(chat_id)
    elif state == "Playing":
        mod = user_state[chat_id]['mod']
        bot.send_message(chat_id,f'–í—ã —É–∂–µ –∏–≥—Ä–∞–µ—Ç–µ, –≤ —Ä–µ–∂–∏–º–µ {mod}!\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–≥—Ä—É –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /stop')
def playing(chat_id):
    difficulty =  user_state[chat_id]['mod']
    max_X = 0
    if difficulty == "–õ–µ–≥–∫–∏–π":
        user_state[chat_id]['Hp'] = 3
        max_X = 10
    elif difficulty == "–ù–æ—Ä–º–∞–ª—å–Ω—ã–π":
        user_state[chat_id]['Hp'] = 3
        max_X = 15
    elif difficulty == "–¢—è–∂–µ–ª—ã–π":
        user_state[chat_id]['Hp'] = 4
        max_X = 25
    elif difficulty == "–ù–µ–≤–æ–∂–º–æ–∂–Ω–æ":
        user_state[chat_id]['Hp'] = 5
        max_X = 100
    number = random.randint(1, max_X)
    user_state[chat_id]['Number'] = number
    user_state[chat_id]['list_podzkazka'] = list(range(1, max_X + 1))
    bot.send_message(chat_id, f'–ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É!\n–†–µ–∂–∏–º: {user_state[chat_id]['mod']}\n–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ {max_X}\n–£ —Ç–µ–±—è {user_state[chat_id]['Hp']} HP')


@bot.message_handler()
def play(message):

    chat_id = message.chat.id
    if chat_id not in user_state:
        user_state[chat_id] = {"state": "notPlaying"}
    state = user_state[chat_id]['state']
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–°—ã–≥—Ä–∞—Ç—å –µ—â–µ", callback_data="about"))
    if state == "Playing":
        if not message.text.isdigit():
            bot.send_message(chat_id, "–í–≤–µ–¥–∏ —á–∏—Å–ª–æ!")
            return
        else:
            numbers = user_state[chat_id]['Number']
            list_ = user_state[chat_id]['list_podzkazka']
            if int(message.text) <= len(list_) and int(message.text) >= 1:
                if int(message.text.lower()) == numbers:
                    user_state[chat_id]['state'] = "notPlaying"
                    bot.send_message(chat_id, f'–¢—ã –ø–æ–±–µ–¥–∏–ª—å!')
                    win_score(chat_id)
                elif  int(message.text) != numbers and user_state[chat_id]['Hp'] >= 0:
                    user_state[chat_id]['Hp'] -= 1
                    if user_state[chat_id]['Hp'] == 0:
                        bot.send_message(chat_id,f'–ü—Ä–æ–∏–≥—Ä–∞–ª, —è –∑–∞–≥–∞–¥–∞–ª {numbers}', reply_markup=markup)
                        user_state[chat_id]['state'] = "notPlaying"                       
                    else:
                       bot.send_message(chat_id, f'–ù–µ—É–≥–∞–¥–∞–ª, —É —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å {user_state[chat_id]['Hp']} –∂–∏–∑–Ω–∏')

                     
            else:
                bot.send_message(chat_id, f'–í–≤–µ–¥–∏ —á–∏—Å–ª–æ –≤ —Ä–∞–¥–∏—É—Å–µ {list_[0]} - {list_[-1]}')
    elif state == "notPlaying":
        bot.send_message(chat_id, f'–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É, –Ω–∞–ø–∏—à–∏—Ç–µ /start')
def win_score(chat_id):
    d = 1    
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–°—ã–≥—Ä–∞—Ç—å –µ—â–µ", callback_data="about"))
    if user_state[chat_id]['mod'] == "–õ–µ–≥–∫–∏–π":
        d = 1
    elif user_state[chat_id]['mod'] == "–ù–æ—Ä–º–∞–ª—å–Ω—ã–π":
        d = 1.5
    elif user_state[chat_id]['mod'] == "–¢—è–∂–µ–ª—ã–π":
        d = 3
    elif user_state[chat_id]['mod'] == "–ù–µ–≤–æ–∂–º–æ–∂–Ω–æ":
        d = 4
    score_add = 2 * d * user_state[chat_id]['Hp']
    bot.send_message(chat_id, f'–ó–∞—Ä–∞–±–æ—Ç–∞–Ω—ã –æ—á–∫–∏: {score_add}', reply_markup=markup)

bot.polling(none_stop=True)